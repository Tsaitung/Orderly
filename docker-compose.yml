version: '3.8'

services:
  # Database
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: orderly
      POSTGRES_USER: orderly
      POSTGRES_PASSWORD: orderly_dev_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - orderly-network

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - orderly-network

  # API Gateway
  api-gateway:
    build: 
      context: ./backend/api-gateway
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - JWT_SECRET=dev-jwt-secret-change-in-production
      - USER_SERVICE_URL=http://user-service:3001
      - ORDER_SERVICE_URL=http://order-service:3002
      - PRODUCT_SERVICE_URL=http://product-service:3003
      - ACCEPTANCE_SERVICE_URL=http://acceptance-service:3004
      - BILLING_SERVICE_URL=http://billing-service:3005
      - NOTIFICATION_SERVICE_URL=http://notification-service:3006
    depends_on:
      - postgres
      - redis
    networks:
      - orderly-network

  # User Service
  user-service:
    build:
      context: ./backend/user-service
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://orderly:orderly_dev_password@postgres:5432/orderly
      - JWT_SECRET=dev-jwt-secret-change-in-production
    depends_on:
      - postgres
    networks:
      - orderly-network

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "5173:5173"
    environment:
      - VITE_API_BASE_URL=http://localhost:3000/api
    depends_on:
      - api-gateway
    networks:
      - orderly-network

volumes:
  postgres_data:
  redis_data:

networks:
  orderly-network:
    driver: bridge