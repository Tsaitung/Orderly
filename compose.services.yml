version: '3.8'

# 定義本文件中的別名（繼承自 compose.base.yml 的配置）
x-svc: &svc_common
  restart: unless-stopped
  networks:
    - orderly-network

services:
  api-gateway:
    environment:
      # 基於統一配置管理系統的環境變數將在各環境文件中覆蓋
      PORT: 8000
      API_GATEWAY_URL: ${API_GATEWAY_URL:-http://api-gateway:8000}
      USER_SERVICE_URL: ${USER_SERVICE_URL:-http://user-service:3001}
      ORDER_SERVICE_URL: ${ORDER_SERVICE_URL:-http://order-service:3002}
      PRODUCT_SERVICE_URL: ${PRODUCT_SERVICE_URL:-http://product-service:3003}
      ACCEPTANCE_SERVICE_URL: ${ACCEPTANCE_SERVICE_URL:-http://acceptance-service:3004}
      NOTIFICATION_SERVICE_URL: ${NOTIFICATION_SERVICE_URL:-http://notification-service:3006}
      CUSTOMER_HIERARCHY_SERVICE_URL: ${CUSTOMER_HIERARCHY_SERVICE_URL:-http://customer-hierarchy-service:3007}
      SUPPLIER_SERVICE_URL: ${SUPPLIER_SERVICE_URL:-http://supplier-service:3008}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      user-service:
        condition: service_started
      order-service:
        condition: service_started
      product-service:
        condition: service_started
      acceptance-service:
        condition: service_started
      notification-service:
        condition: service_started
      customer-hierarchy-service:
        condition: service_started
      supplier-service:
        condition: service_started
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    <<: *svc_common

  user-service:
    environment:
      PORT: 3001
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    <<: *svc_common

  order-service:
    environment:
      PORT: 3002
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    <<: *svc_common

  product-service:
    environment:
      PORT: 3003
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3003/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    <<: *svc_common

  acceptance-service:
    environment:
      PORT: 3004
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3004/acceptance/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    <<: *svc_common

  notification-service:
    environment:
      PORT: 3006
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3006/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    <<: *svc_common

  customer-hierarchy-service:
    environment:
      PORT: 3007
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3007/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    <<: *svc_common

  supplier-service:
    environment:
      PORT: 3008
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3008/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    <<: *svc_common

networks:
  orderly-network:
    external: true

