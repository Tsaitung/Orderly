# syntax=docker/dockerfile:1

FROM node:20-alpine AS base
WORKDIR /app
RUN apk add --no-cache libc6-compat openssl

# Install dependencies (root project)
FROM base AS deps
COPY package.json package-lock.json ./
RUN npm ci

# Build the Next.js app (standalone output)
FROM base AS builder
COPY --from=deps /app/node_modules ./node_modules
COPY . .
ENV NEXT_TELEMETRY_DISABLED=1
# No ORM client generation required (moved to FastAPI + SQLAlchemy)
# Backend URL now injected at runtime, not build time
# Build Next.js (standalone)
RUN npm run build

# Production image, copy standalone server
FROM node:20-alpine AS runner
WORKDIR /app
# NODE_ENV set by Cloud Run deployment (staging/production)
ENV NEXT_TELEMETRY_DISABLED=1

# Copy the standalone server and static assets
COPY --from=builder /app/.next/standalone ./
COPY --from=builder /app/.next/static ./.next/static
# Copy public folder from source (not builder) since standalone doesn't include it
COPY public ./public

# Cloud Run provides PORT automatically; listen on dynamic port
ENV PORT=8080
EXPOSE $PORT

# Create entrypoint script for runtime env injection
RUN echo '#!/bin/sh' > /app/entrypoint.sh && \
    echo 'set -e' >> /app/entrypoint.sh && \
    echo '' >> /app/entrypoint.sh && \
    echo '# Inject runtime environment variables into Next.js standalone' >> /app/entrypoint.sh && \
    echo 'if [ -n "$NODE_ENV" ]; then' >> /app/entrypoint.sh && \
    echo '  export NODE_ENV="$NODE_ENV"' >> /app/entrypoint.sh && \
    echo 'fi' >> /app/entrypoint.sh && \
    echo 'if [ -n "$ORDERLY_BACKEND_URL" ]; then' >> /app/entrypoint.sh && \
    echo '  export ORDERLY_BACKEND_URL="$ORDERLY_BACKEND_URL"' >> /app/entrypoint.sh && \
    echo 'fi' >> /app/entrypoint.sh && \
    echo 'if [ -n "$BACKEND_URL" ]; then' >> /app/entrypoint.sh && \
    echo '  export BACKEND_URL="$BACKEND_URL"' >> /app/entrypoint.sh && \
    echo 'fi' >> /app/entrypoint.sh && \
    echo '' >> /app/entrypoint.sh && \
    echo '# Debug: Print resolved environment variables' >> /app/entrypoint.sh && \
    echo 'echo "[Docker] Runtime env injection:"' >> /app/entrypoint.sh && \
    echo 'echo "NODE_ENV=$NODE_ENV"' >> /app/entrypoint.sh && \
    echo 'echo "ORDERLY_BACKEND_URL=$ORDERLY_BACKEND_URL"' >> /app/entrypoint.sh && \
    echo 'echo "BACKEND_URL=$BACKEND_URL"' >> /app/entrypoint.sh && \
    echo '' >> /app/entrypoint.sh && \
    echo '# Start Next.js server' >> /app/entrypoint.sh && \
    echo 'exec node server.js' >> /app/entrypoint.sh && \
    chmod +x /app/entrypoint.sh

# Use entrypoint script that properly injects runtime env vars
CMD ["/app/entrypoint.sh"]
